# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, danceability, and energy by artist and track. 
SELECT artist_name, track_name, avg(popularity), avg(danceability), avg(energy)
  FROM BIT_DB.Spotifydata
  GROUP BY artist_name, track_name;

--What is the most popular danceable song?
 SELECT track_name, artist_name, MAX(danceability), MAX(popularity)
  FROM BIT_DB.spotifydata;

--who are the top 10 artists based on popularity?--
SELECT artist_name, popularity
  FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC
    LIMIT 10;

--Which artist wrote the most danceable and energetic song?
SELECT artist_name, track_name, danceability, energy
  FROM BIT_DB.Spotifydata
    ORDER BY energy DESC, danceability DESC
    LIMIT 1;

--Which artist wrote the shortest track?--
SELECT artist_name, track_name,MIN(duration_ms) 
  FROM BIT_DB.Spotifydata;
   
--CTE TASK--
WITH popularity_average_CTE AS (SELECT s.artist_name, AVG(s.popularity) AS average_popularity
        FROM spotifydata s 
        GROUP BY s.artist_name)
SELECT artist_name, average_popularity, 'Top Star' AS tag
    FROM popularity_average_CTE WHERE average_popularity >= 90
